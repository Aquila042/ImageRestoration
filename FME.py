import numpy as np

a=-1/6
b=-1/3
c=2/3

M = np.array([[4*c,2*a,0,2*a,b,0,0,0,0],
    [2*a,4*c,2*a,b,2*a,b,0,0,0],
    [0,2*a,4*c,0,b,2*a,0,0,0],
    [2*a,b,0,4*c,2*a,0,2*a,b,0],
    [b,2*a,b,2*a,4*c,2*a,b,2*a,b],
    [0,b,2*a,0,2*a,4*c,0,b,2*a],
    [0,0,0,2*a,b,0,4*c,2*a,0],
    [0,0,0,b,2*a,b,2*a,4*c,2*a],
    [0,0,0,0,b,2*a,0,2*a,4*c]],dtype=float)

B1 = 0.2
B2 = 0.2
B3 = 0.2
B4 = 0.2
B5 = 0.2
B6 = 0.4
B7 = 0.6
B8 = 0.8
B9 = 1
B10 = 1
B11 = 1
B12 = 1
B13 = 1
B14 = 0.8
B15 = 0.6
B16 = 0.4

#Note minus sign
f = -np.array([[b*(B1+B3+B15)+2*a*(B2+B16)],
    [b*(B2+B4) + 2*a*(B3)],
    [b*(B3+B5+B7) + 2*a*(B4+B6)],
    [b*(B16+B14) + 2*a*(B15)],
    [0],
    [b*(B6+B8) + 2*a*(B7)],
    [b*(B15+B13+B11) + 2*a*(B14+B12)],
    [b*(B12+B10) + 2*a*(B11)],
    [b*(B7+B9+B11) + 2*a*(B8+B10)]])

print(M)

d = np.linalg.solve(M,f)
print(1-d)
